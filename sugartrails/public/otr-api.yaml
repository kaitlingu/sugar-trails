swagger: '2.0'
info:
  title: OneTouch Reveal API
  description: 'Interact with the OneTouch Reveal Diabetes Management Application. Note that Bearer Tokens are required for each search, fetch, and subscribe call. These are generated by apigee on login for swagger. See the CURL example for each call (which can be found by pressing "Test It!") for an example bearer token.'
  version: 1.0.0
host: jnj-dev.apigee.net
schemes:
  - https
basePath: /otr
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: Health Data
    description: API resources for searching and retrieving Health Data for a user
  - name: Subscription
    description: API resources for managing subscriptions to Health Data for a user
  - name: OAuth2
    description: API resources for getting OAuth2 tokens
securityDefinitions:
  oauth2:
    type: oauth2
    authorizationUrl: 'https://jnj-dev.apigee.net/otr/oauth2/authorize'
    tokenUrl: 'https://jnj-dev.apigee.net/otr/oauth2/token'
    flow: accessCode
    scopes:
      subscription: Manage subscriptions of HealthData for a user
      'read:healthdata': Read HealthData for a user
  app_basic:
    type: basic
    description: The Client ID and Client secret for the API
responses:
  Not Found:
    description: Not Found
    schema:
      type: object
      $ref: '#/definitions/Error'
  Unauthorized:
    description: Unauthorized
    schema:
      type: object
      $ref: '#/definitions/Error'
  Internal Server Error:
    description: Internal Server Error
    schema:
      type: object
      $ref: '#/definitions/Error'
  Bad Request:
    description: Bad Request
    schema:
      type: object
      $ref: '#/definitions/Error'
paths:
  /oauth2/authorize:
    get:
      summary: OAuth 2.0 Authorize
      description: 'This resource will redirect the user to a login page on OneTouch Reveal web application for user credentials validation and authorization of the data access by the application initiating this request. After successful authorization, the user will be redirected to the defined callback with an authorization code that can be submitted to the /oauth2/token endpoint for an OAuth 2.0 token.'
      parameters:
        - name: client_id
          in: query
          description: API Client ID of the application
          required: true
          type: string
      produces:
        - text/plain
      tags:
        - OAuth2
      responses:
        '302':
          description: Redirect to OneTouch Reveal web application for authentication
          headers:
            Location:
              description: The location to redirect the client to for OneTouch Reveal authentication
              type: string
          schema:
            type: string
          examples:
            text/plain: 'https://onetouchreveal.com/oauth?appid=HKJGDlkjsfJKXKj109uXJKLJksjdyui7&scope=healthdata:read'
        '400':
          $ref: '#/responses/Bad Request'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/Not Found'
        '500':
          $ref: '#/responses/Internal Server Error'
  /oauth2/token:
    post:
      summary: OAuth 2.0 Token
      description: "This resource is invoked by the application to exchange an authorization code by an access token.  \nThere are 2 ways of specifying applicatin authentication for this call.  The *client_id* and *client_secret* can be specified as an Authentication Basic header.  Alternatively, *client_id* and *client_secret* may be specified as part of the form data.  The form data will only be referenced if no Authentication Basic header has been specified."
      parameters:
        - name: code
          in: formData
          description: The authorization code provided by the OneTouch Reveal Web application
          required: true
          type: string
        - name: grant_type
          in: formData
          description: 'The OAuth 2.0 grant type.  Please note, the OneTouch Reveal API only supports the authorization_code grant type.'
          required: true
          type: string
          enum:
            - authorization_code
        - name: client_id
          in: formData
          description: API Client ID of the application
          required: false
          type: string
        - name: client_secret
          in: formData
          description: API Client secrent of the application
          required: false
          type: string
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      tags:
        - OAuth2
      security:
        - app_basic: []
      responses:
        '200':
          description: The OAuth 2.0 token details
          schema:
            type: object
            properties:
              access_token:
                type: string
                description: The OAuth 2.0 token
              scope:
                type: string
                description: The OAuth 2.0 scope that was granted
              token_type:
                type: string
                description: The OAuth 2.0 token type
          examples:
            application/json: "{ \n  \"access_token\":\"4ZoYcqqYqOkZZ8FH1c54DricBbit\", \n  \"scope\":\"subscription read:healthdata\", \n  \"token_type\":\"BearerToken\" \n}"
        '400':
          $ref: '#/responses/Bad Request'
        '401':
          $ref: '#/responses/Unauthorized'
        '500':
          $ref: '#/responses/Internal Server Error'
  /oauth2/revoke:
    post:
      summary: OAuth 2.0 Revoke Token
      description: 'This resource is invoked by the application to revoke access token. Only the application that owns the token can revoke a token. Once revoked, tokens cannot be made valid again. The only alternative is to restart the complete OAuth flow from the beginning again (the user will have to re-authorize access to the data).'
      parameters:
        - name: token
          in: formData
          description: The OAuth 2.0 token to revoke.
          required: true
          type: string
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/x-www-form-urlencoded
      tags:
        - OAuth2
      security:
        - app_basic: []
      responses:
        '200':
          description: The OAuth 2.0 token details
          schema:
            type: object
            properties:
              access_token:
                type: string
                description: The OAuth 2.0 token
              scope:
                type: string
                description: The OAuth 2.0 scope that was granted
              token_type:
                type: string
                description: The OAuth 2.0 token type
          examples:
            application/x-www-form-urlencoded: token=4ZoYcqqYqOkZZ8FH1c54DricBbit
        '400':
          $ref: '#/responses/Bad Request'
        '401':
          $ref: '#/responses/Unauthorized'
        '500':
          $ref: '#/responses/Internal Server Error'
  /v1/patient/-/healthdata/search:
    get:
      summary: Search Health Data
      description: |
        The *Search Health Data* endpoint returns Health Data by date and type.
      parameters:
        - name: type
          in: query
          description: The comma seperated list of types of records to search
          required: true
          type: array
          collectionFormat: csv
          items:
            type: string
            enum:
              - bloodGlucose
              - bolusInsulin
              - exercise
              - food
        - name: startDate
          in: query
          description: The date and time to start the search.  Dates are specified in ISO-8601 format.
          type: string
          required: true
          format: date-time
        - name: endDate
          in: query
          description: The date and time to end the search.  The endDate must be after the startDate.  Dates are specified in ISO-8601 format.
          type: string
          required: true
          format: date-time
        - name: limit
          in: query
          description: 'The maximum number of records to return.  5,000 is the maximum limit that can be requested. If no value is provided, 10 will be returned.'
          type: integer
          default: 10
          minimum: 0
          maximum: 5000
        - name: offset
          in: query
          description: The record number to start the search at
          type: integer
          default: 0
          minimum: 0
      security:
        - oauth2:
            - 'read:healthdata'
      tags:
        - Health Data
      responses:
        '200':
          description: The Search Response
          schema:
            type: object
            properties:
              meta:
                type: object
                properties:
                  offset:
                    type: integer
                    description: The offset the search started on
                  limit:
                    type: integer
                    description: The limit that the search was limited to
                  startDate:
                    type: string
                    format: date-time
                    description: The start date of the search
                  endDate:
                    type: string
                    format: date-time
                    description: The end date of the search
                  totalCount:
                    type: integer
                    description: The total number of records found in the search
                  totalIncludedCount:
                    type: integer
                    description: The total number of records included in the result (up to limit)
                  bloodGlucoseCount:
                    type: integer
                    description: The total number of Blood Glucose records found in the search
                  bloodGlucoseIncluded:
                    type: integer
                    description: The total number of Blood Glucose records included in the result (up to limit)
                  bolusInsulinCount:
                    type: integer
                    description: The total number of Bolus Insulin records found in the search
                  bolusInsulinIncluded:
                    type: integer
                    description: The total number of Bolus Insulin records included in the result (up to limit)
                  foodCount:
                    type: integer
                    description: The total number of Food records found in the search
                  foodIncludedCount:
                    type: integer
                    description: The total number of Food records included in the result (up to limit)
                  exerciseCount:
                    type: integer
                    description: The total number of Exercise records found in the search
                  exerciseIncluded:
                    type: integer
                    description: The total number of Exercise records included in the result (up to limit)
                  bloodGlucoseNotFound:
                    type: integer
                    description: The total number of bloodGlucose records from the request that were not found
                  bolusInsulinNotFound:
                    type: integer
                    description: The total number of bolusInsulin records from the request that were not found
                  foodIdsNotFound:
                    type: integer
                    description: The total number of food records from the request that were not found
                  exerciseIdsNotFound:
                    type: integer
                    description: The total number of exercise records from the request that were not found
              bloodGlucose:
                type: array
                items:
                  $ref: '#/definitions/BloodGlucose'
              bolusInsulin:
                type: array
                items:
                  $ref: '#/definitions/BolusInsulin'
              food:
                type: array
                items:
                  $ref: '#/definitions/Food'
              exercise:
                type: array
                items:
                  $ref: '#/definitions/Exercise'
        '400':
          $ref: '#/responses/Bad Request'
        '401':
          $ref: '#/responses/Unauthorized'
        '500':
          $ref: '#/responses/Internal Server Error'
  /v1/patient/-/healthdata/fetch:
    post:
      summary: Fetch specific Health Data records by id
      description: |-
        The *Fetch Health Data* endpoint returns Health Data by  id.
         A maximum of 5,000 records can be retrieved.
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              bloodGlucose:
                description: all ids for bloodGlucose readings
                type: array
                items:
                  type: string
              bolusInsulin:
                description: all ids for bolusInsulin readings
                type: array
                items:
                  type: string
              food:
                description: all ids for food readings
                type: array
                items:
                  type: string
              exercise:
                description: all ids for exercise readings
                type: array
                items:
                  type: string
      security:
        - oauth2:
            - 'read:healthdata'
      tags:
        - Health Data
      responses:
        '200':
          description: The Fetch response
          schema:
            type: object
            properties:
              bloodGlucose:
                type: array
                items:
                  $ref: '#/definitions/BloodGlucose'
              bolusInsulin:
                type: array
                items:
                  $ref: '#/definitions/BolusInsulin'
              food:
                type: array
                items:
                  $ref: '#/definitions/Food'
              exercise:
                type: array
                items:
                  $ref: '#/definitions/Exercise'
              meta:
                type: object
                properties:
                  totalCount:
                    type: integer
                    description: The total number of records found
                  bloodGlucoseCount:
                    type: integer
                    description: The total number of Blood Glucose records found
                  bolusInsulinCount:
                    type: integer
                    description: The total number of Bolus Insulin records found
                  foodCount:
                    type: integer
                    description: The total number of Food records found
                  exerciseCount:
                    type: integer
                    description: The total number of Exercise records found in the search
                  bloodGlucoseNotFound:
                    type: integer
                    description: The total number of bloodGlucose records from the request that were not found
                  bolusInsulinNotFound:
                    type: integer
                    description: The total number of bolusInsulin records from the request that were not found
                  foodIdsNotFound:
                    type: integer
                    description: The total number of food records from the request that were not found
                  exerciseIdsNotFound:
                    type: integer
                    description: The total number of exercise records from the request that were not found
        '400':
          $ref: '#/responses/Bad Request'
        '401':
          $ref: '#/responses/Unauthorized'
        '500':
          $ref: '#/responses/Internal Server Error'
  '/v1/patient/-/healthdata/bloodGlucose/{id}':
    get:
      summary: Blood Glucose
      description: >
        The *Blood Glucose* endpoint returns a single blood glucose record by
        id.
      parameters:
        - name: id
          in: path
          description: 'The *id* of the record'
          required: true
          type: string
      security:
        - oauth2:
            - 'read:healthdata'
      tags:
        - Health Data
      responses:
        '200':
          description: The Blood Glucose record
          schema:
            $ref: '#/definitions/BloodGlucose'
        '400':
          $ref: '#/responses/Bad Request'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/Not Found'
        '500':
          $ref: '#/responses/Internal Server Error'
  '/v1/patient/-/healthdata/exercise/{id}':
    get:
      summary: Exercise
      description: |
        The *Exercise* endpoint returns a single exercise record by id.
      parameters:
        - name: id
          in: path
          description: 'The *id* of the record'
          required: true
          type: string
      security:
        - oauth2:
            - 'read:healthdata'
      tags:
        - Health Data
      responses:
        '200':
          description: The Exercise record
          schema:
            $ref: '#/definitions/Exercise'
        '400':
          $ref: '#/responses/Bad Request'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/Not Found'
        '500':
          $ref: '#/responses/Internal Server Error'
  '/v1/patient/-/healthdata/bolusInsulin/{id}':
    get:
      summary: Bolus Insulin
      description: |
        The *Bolus* endpoint returns a single bolus insulin record by id.
      parameters:
        - name: id
          in: path
          description: 'The *id* of the record'
          required: true
          type: string
      security:
        - oauth2:
            - 'read:healthdata'
      tags:
        - Health Data
      responses:
        '200':
          description: The Bolus Insulin record
          schema:
            $ref: '#/definitions/BolusInsulin'
        '400':
          $ref: '#/responses/Bad Request'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/Not Found'
        '500':
          $ref: '#/responses/Internal Server Error'
  '/v1/patient/-/healthdata/food/{id}':
    get:
      summary: Food
      description: |
        The *Food* endpoint returns a single food record by id.
      parameters:
        - name: id
          in: path
          description: 'The *id* of the record'
          required: true
          type: string
      security:
        - oauth2:
            - 'read:healthdata'
      tags:
        - Health Data
      responses:
        '200':
          description: The Food record
          schema:
            $ref: '#/definitions/Food'
        '400':
          $ref: '#/responses/Bad Request'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/Not Found'
        '500':
          $ref: '#/responses/Internal Server Error'
  /v1/subscription:
    get:
      summary: Get Subscriptions
      description: 'The *Subscription* resource returns all subscriptions associated with a user.'
      security:
        - oauth2:
            - subscription
      tags:
        - Subscription
      responses:
        '200':
          description: A list of IDs for the subscriptions associated with a user.
          schema:
            type: array
            items:
              type: string
        '400':
          $ref: '#/responses/Bad Request'
        '401':
          $ref: '#/responses/Unauthorized'
        '500':
          $ref: '#/responses/Internal Server Error'
    post:
      summary: Create Subscriptions
      description: 'Create a new *Subscription*'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Subscription'
      security:
        - oauth2:
            - subscription
      tags:
        - Subscription
      responses:
        '200':
          description: The Subscription that was created
          schema:
            type: array
            items:
              type: string
        '400':
          $ref: '#/responses/Bad Request'
        '401':
          $ref: '#/responses/Unauthorized'
        '500':
          $ref: '#/responses/Internal Server Error'
  '/v1/subscription/{id}':
    get:
      summary: Get a Subscription
      description: 'The *Subscription* resource returns a Subscription by id for a user.'
      parameters:
        - name: id
          required: true
          in: path
          type: string
          description: The id of the Subscription to get
      security:
        - oauth2:
            - subscription
      tags:
        - Subscription
      responses:
        '200':
          description: The subscription
          schema:
            type: object
            $ref: '#/definitions/Subscription'
        '400':
          $ref: '#/responses/Bad Request'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/Not Found'
        '500':
          $ref: '#/responses/Internal Server Error'
    put:
      summary: Update Subscription
      description: 'Update a *Subscription* for a user'
      parameters:
        - name: id
          required: true
          in: path
          type: string
          description: The id of the Subscription to update
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Subscription'
      security:
        - oauth2:
            - subscription
      tags:
        - Subscription
      responses:
        '200':
          description: The Subscription that was updated
          schema:
            type: object
            $ref: '#/definitions/Subscription'
        '400':
          $ref: '#/responses/Bad Request'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/Not Found'
        '500':
          $ref: '#/responses/Internal Server Error'
    delete:
      summary: Delete Subscription
      description: 'Delete a *Subscription* for a user'
      parameters:
        - name: id
          required: true
          in: path
          type: string
          description: The id of the Subscription to delete
      security:
        - oauth2:
            - subscription
      tags:
        - Subscription
      responses:
        '200':
          description: The Subscription that was deleted
          schema:
            type: object
            $ref: '#/definitions/Subscription'
        '400':
          $ref: '#/responses/Bad Request'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/Not Found'
        '500':
          $ref: '#/responses/Internal Server Error'
definitions:
  BloodGlucose:
    description: A Blood Glucose Health Record
    allOf:
      - $ref: '#/definitions/HealthRecord'
      - properties:
          aboveLinearRange:
            type: boolean
            description: "True if the reading was above the glucose meter's defined testing range"
          belowLinearRange:
            type: boolean
            description: "True if the reading was below the glucose meter's defined testing range"
          cgmCalibration:
            type: boolean
            description: True if the reading was used for CGM calibration
          bgValue:
            type: object
            $ref: '#/definitions/Measurement'
            description: The value of the Blood Glucose Health Record
          mealTag:
            type: string
            description: Meal information for a bloodGlucose reading
  Exercise:
    description: An Exercise Health Record
    allOf:
      - $ref: '#/definitions/HealthRecord'
      - properties:
          exercise:
            type: object
            $ref: '#/definitions/Measurement'
            description: The duration of the exercise
          exerciseIntensity:
            type: string
            description: The intensity of the exercise
            enum:
              - EXERCISE_INTENSITY_MILD
              - EXERCISE_INTENSITY_MEDIUM
              - EXERCISE_INTENSITY_INTENSE
  Food:
    description: An Food Health Record
    allOf:
      - $ref: '#/definitions/HealthRecord'
      - properties:
          carbohydrates:
            type: object
            $ref: '#/definitions/Measurement'
            description: The amount of carbohydrates in the food
          mealSize:
            type: string
            description: The size of the meal
            enum:
              - MEAL_SIZE_NORMAL
              - MEAL_SIZE_SMALL
              - MEAL_SIZE_LARGE
              - MEAL_SIZE_SNACK
  BolusInsulin:
    description: An Insulin Health Record.  This record encompasses insulin from insulin pumps and rapid-acting insulin injections.  Basal insulin delivered from insulin pumps and long-acting insulin are not included.
    allOf:
      - $ref: '#/definitions/HealthRecord'
      - properties:
          bolusDelivered:
            type: object
            $ref: '#/definitions/Measurement'
            description: The amount of insulin that was delivered
          bolusCalculated:
            type: object
            $ref: '#/definitions/Measurement'
            description: The amount of insulin that was calculated if a bolus calculator was used
          bolusRequested:
            type: object
            $ref: '#/definitions/Measurement'
            description: 'The amount of insulin that was requested by the patient if delivered from an insulin pump.  In some cases, not all insulin will be delivered, such as when the user cancelled the bolus during delivery.'
          bolusOverride:
            type: boolean
            description: True if a bolus calculator was used and requested amount was different than the bolus requested.
          bolusCancelled:
            type: boolean
            description: True if a bolus was initiated on a pump and cancelled before full delivery.
          bgCorrection:
            type: boolean
            description: 'True if a bolus calculator was used, and a correction was recommended based upon blood glucose input.'
          mealCorrection:
            type: boolean
            description: 'True if a bolus calculator was used, and a correction was recommended based upon carbohydrate input.'
  HealthRecord:
    description: The generic base type for a Health Record
    properties:
      id:
        type: string
        description: The unique identifier of the Health Record
      createdDate:
        type: integer
        format: int64
        description: Time (in milliseconds) of when the Health Record was created
      lastUpdatedDate:
        type: integer
        format: int64
        description: Time (in milliseconds) of when the Health Record was last updated
      publishedDate:
        type: integer
        format: int64
        description: Time (in milliseconds) of when the Health Record was last published to the server
      readingDate:
        type: string
        format: date-time
        description: The date and time of the Health Record
      annotation:
        type: array
        items:
          type: string
      deviceType:
        type: string
        description: The key defining the type of device used to record the Health Record
      deviceSerialNumber:
        type: string
        description: The serial number of the device used to record the Health Record
      edited:
        type: boolean
        description: True if the Health Record has been edited
      editable:
        type: boolean
        description: True if the Health Record is editable by the user
      manual:
        type: boolean
        description: True if the Health Record was recorded manually
  Measurement:
    properties:
      value:
        type: number
        format: double
        description: The value of the measurement
      units:
        type: string
        description: The units of the measurement
  Subscription:
    properties:
      endpoint:
        type: string
        description: The endpoint that HealthData will be POSTed to.
      type:
        type: string
        description: The type of subscription
        default: all
        enum:
          - all
          - idsOnly
      dataTypes:
        description: 'The types of data that will be POSTed. default is ["bloodGlucose", "bolusInsulin", "exercise", "food"]'
        type: array
        items:
          type: string
      lastProcessed:
        type: integer
        format: int64
        description: Time (in milliseconds) of when the Susbcription was last processed
      active:
        description: True if the subscription is currently active
        type: boolean
    required:
      - endpoint
  Error:
    properties:
      statusCode:
        type: integer
        description: The HTTP Status Code
      reason:
        type: string
        description: The HTTP Reason message
      message:
        type: string
        description: The detailed error message
      fault:
        type: string
        description: A unique fault code for this error